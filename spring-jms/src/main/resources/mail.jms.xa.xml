<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd ">

	<context:component-scan base-package="fr.cogitec" />
	<context:property-placeholder location="classpath:broker.properties" />


	<bean id="xaConnectionFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory"
		p:brokerURL="${activemq.broker.url}">
		<property name="redeliveryPolicy">
			<bean class="org.apache.activemq.RedeliveryPolicy">
				<property name="initialRedeliveryDelay" value="1000" />
				<property name="maximumRedeliveries" value="1" />
			</bean>
		</property>
	</bean>
	<bean id="atomikosConnectionFactory" class="com.atomikos.jms.AtomikosConnectionFactoryBean"
		init-method="init" destroy-method="close" p:uniqueResourceName="amq1"
		p:xaConnectionFactory-ref="xaConnectionFactory" p:maxPoolSize="10" />

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close" p:forceShutdown="true" />

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
		p:transactionTimeout="300" />

	<bean id="jtaTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager"
		p:transactionManager-ref="atomikosTransactionManager"
		p:userTransaction-ref="atomikosUserTransaction" />

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate"
		p:connectionFactory-ref="atomikosConnectionFactory" p:receiveTimeout="1000"
		p:messageConverter-ref="mailConverter" p:sessionTransacted="true" />

	<jms:listener-container factory-id="mailContainer"
		transaction-manager="jtaTransactionManager" connection-factory="atomikosConnectionFactory"
		message-converter="mailConverter" />
		
	<jms:annotation-driven />
	<tx:annotation-driven transaction-manager="jtaTransactionManager" />

</beans>